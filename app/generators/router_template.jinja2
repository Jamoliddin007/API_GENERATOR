from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from app.database.db_session import get_db
from app.models.crud import CrudModel, CrudField
from app.schemas.crud import {{ model_name|capitalize }}Create, {{ model_name|capitalize }}Out

router = APIRouter(prefix="/crud", tags=["CRUD Builder"])

# CRUD modelini yaratish
@router.post("/create")
def create_{{ model_name|lower }}(data: {{ model_name|capitalize }}Create, db: Session = Depends(get_db)):
    crud = CrudModel(name=data.name)
    db.add(crud)
    db.commit()
    db.refresh(crud)
    return crud

# CRUD modeliga yangi field qoâ€˜shish
@router.post("/{crud_id}/fields/")
def add_field_to_{{ model_name|lower }}(crud_id: int, field: CrudFieldCreate, db: Session = Depends(get_db)):
    crud = db.query(CrudModel).filter(CrudModel.id == crud_id).first()
    if not crud:
        raise HTTPException(status_code=404, detail="CRUD model not found")

    db_field = CrudField(
        name=field.name,
        type=field.type,
        nullable=field.nullable,
        default=field.default,
        unique=field.unique,
        index=field.index,
        primary_key=field.primary_key,
        onupdate=field.onupdate,
        format=field.format,
        crud_id=crud_id
    )
    db.add(db_field)
    db.commit()
    db.refresh(db_field)
    return db_field
